"use strict";(self["webpackChunkconference_toolkit"]=self["webpackChunkconference_toolkit"]||[]).push([[797],{4653:function(n,o,t){t.r(o),t.d(o,{default:function(){return p}});var e=function(){var n=this,o=n._self._c;return o("div",{staticClass:"remote"},[o("p",[n._v("WebRTC support: "+n._s(n.supported))]),o("button",{on:{click:function(o){return n.sendData("LEFT")}}},[n._v(" LEFT ")])])},s=[],i=(t(8862),t(8853)),r=t.n(i),c={data:function(){return{p:null,supported:r().WEBRTC_SUPPORT}},mounted:function(){this.p=new(r())({initiator:!0}),this.p.on("error",this.onError),this.p.on("signal",this.onSignal),this.p.on("data",this.onData),this.p.on("connect",(function(){console.log("SOMEONE CONNECT"),this.p.send("whatever"+Math.random())}))},methods:{onError:function(n){console.log("error",n)},onSignal:function(n){console.log("SIGNAL",JSON.stringify(n))},onData:function(n){console.log("data: "+n)},sendData:function(n){this.p.connected?this.p.send(n):console.log("☢️ Not connected")}}},a=c,u=t(1001),l=(0,u.Z)(a,e,s,!1,null,"601136dc",null),p=l.exports}}]);
//# sourceMappingURL=remote-legacy.af241ea5.js.map